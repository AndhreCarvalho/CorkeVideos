WEBVTT
Kind: captions
Language: en

00:00:03.600 --> 00:00:08.670
If you pick up any of the standard textbooks
about robotics, you will find reference to

00:00:08.670 --> 00:00:14.760
Denavit and Hartenberg notation. This is named
after Jacques Denavit and Richard Hartenberg

00:00:14.760 --> 00:00:21.850
who in 1955 wrote an article and later, a
book which proposed a very, very general way

00:00:21.850 --> 00:00:28.080
of describing serial link mechanisms and most
of the robots that we've looked at are serial

00:00:28.080 --> 00:00:33.550
link manipulators. So, the Denavit and Hartenberg
notation is particularly applicable for this

00:00:33.550 --> 00:00:35.250
class of mechanism.

00:00:35.250 --> 00:00:40.620
Now in most of the standard textbooks. People
start off with introducing this particular

00:00:40.620 --> 00:00:46.440
notation. Personally, I find the notation
somewhat complex and not particularly intuitive.

00:00:46.440 --> 00:00:51.870
So, what I've done in this particular lecture
is left it until the end. A key aspect of

00:00:51.870 --> 00:00:58.399
Denavit-Hartenberg notation is that each joint
in the robot is described simply by 4 parameters.

00:00:58.399 --> 00:01:02.850
So, let's start off with a very simple serial
link manipulative that 2 joint robot that

00:01:02.850 --> 00:01:08.189
we've seen a number of times before. Each
joint is attached via a link to the previous

00:01:08.189 --> 00:01:12.299
joint. So here, we can see joint 1 which is
connected to link 1 which is connected to

00:01:12.299 --> 00:01:18.049
joint 2 which is connected to link 2. Their
links are rigid but the joints can move. They

00:01:18.049 --> 00:01:23.490
can be either rotational as an example shown
here or they can be prismatic or sliding joints

00:01:23.490 --> 00:01:25.539
that we've talked about before.

00:01:25.539 --> 00:01:30.840
Every joint connects to links and every link
connects to joints except for the first and

00:01:30.840 --> 00:01:35.890
last link. The first link is the base of the
robot which does not move refer to that as

00:01:35.890 --> 00:01:42.109
link 0 and the last link is the in-defector
or is attached to the in-defector of the robot.

00:01:42.109 --> 00:01:47.530
If a robot has got n-joints then, it must
have n plus 1 links, that's including the

00:01:47.530 --> 00:01:54.759
0th link or the base. Fundamental to the Denavit-Hartenberg
notation is we attach a coordinate frame to

00:01:54.759 --> 00:02:01.439
the far end of every link of the robot. So
here, we can see link J shown in blue and

00:02:01.439 --> 00:02:07.149
we attach the coordinate frame J to the far
end of link J that is the end of the link

00:02:07.149 --> 00:02:13.400
that's closest to the robots tool. Then, we
describe the pose of that link frame with

00:02:13.400 --> 00:02:19.170
respect to the link frame of the previous
joint. So, this is a relative pose and this

00:02:19.170 --> 00:02:25.040
is a concept we should be familiar with now.
This is a relative pose from coordinate frame

00:02:25.040 --> 00:02:28.140
J-1 to coordinate frame J.

00:02:28.140 --> 00:02:34.090
In the Denavit-Hartenberg notation, the link
transform is represented by a homogeneous

00:02:34.090 --> 00:02:39.690
transformation matrix which is typically denoted
by the letter A and it comprises a number

00:02:39.690 --> 00:02:45.140
of elementary transformations. It comprises
a rotation around the Z axis. A translation

00:02:45.140 --> 00:02:52.850
along the Z axis. A translation along the
X axis and a rotation around the X axis. It's

00:02:52.850 --> 00:02:57.540
very concise. It allows us to describe the
relationship between the 2 link coordinate

00:02:57.540 --> 00:03:04.310
frames by simply 4 parameters, theta, D, A
and alpha. Let's see how that works in practice.

00:03:04.310 --> 00:03:12.990
So here, we have in red link J-1 and the coordinate
frame attached to link J-1. First thing that

00:03:12.990 --> 00:03:19.120
we're going to do is to rotate that coordinate
frame around its Z axis by an amount theta

00:03:19.120 --> 00:03:24.760
J and we rotate the axis. The next thing we're
going to do is to translate that coordinate

00:03:24.760 --> 00:03:29.950
frame along the Z axis by an amount D and
then, we're going to translate it along the

00:03:29.950 --> 00:03:38.060
X axis by an amount J and finally, we're going
to rotate it around the X axis by an angle

00:03:38.060 --> 00:03:40.170
alpha and now, it looks like this.

00:03:40.170 --> 00:03:48.260
So, we have moved from the frame J-1 to the
frame J by applying 4 elementary transformations,

00:03:48.260 --> 00:03:56.280
2 translations and 2 rotations. You're probably
asking is how can we do this using only 4

00:03:56.280 --> 00:04:02.160
parameters because a pose has got 2 components.
It's got a translational component which we

00:04:02.160 --> 00:04:08.950
described by 3 numbers and it has a rotation
which we described by 3 numbers. For example,

00:04:08.950 --> 00:04:14.470
roll, pitch, yaw angles or Euler angles. How
do we do it with just 4 numbers? Well, the

00:04:14.470 --> 00:04:19.900
reason this works is that the Denavit-Hartenberg
notation requires some constraints on where

00:04:19.900 --> 00:04:27.380
we place the coordinate frames. The first
constraint is that the X axis of frame J intersects

00:04:27.380 --> 00:04:35.340
the Z axis of frame J-1. The second constraint
is that the X axis of frame J is perpendicular

00:04:35.340 --> 00:04:40.940
to the Z axis of frame J-1. Although, there
are only 6 degrees of freedom in a relative

00:04:40.940 --> 00:04:46.550
pose. The fact that we've introduced 2 constraints
means that we can describe this using only

00:04:46.550 --> 00:04:51.860
4 parameters. There's an interesting and often
confusing consequence of this and that means

00:04:51.860 --> 00:04:57.220
that the link frames are not necessarily on
the link itself and this is something that

00:04:57.220 --> 00:05:02.320
quite often confuses people when they're starting
off and learning about Denavit-Hartenberg

00:05:02.320 --> 00:05:03.640
notation.

00:05:03.640 --> 00:05:10.080
The axis of a rotational joint has to be aligned
with the Z axis of that joints coordinate

00:05:10.080 --> 00:05:16.290
frame. The Denavit-Hartenberg notation requires
that the axis of joint J is parallel to the

00:05:16.290 --> 00:05:21.960
Z axis of a coordinate frame but it's not
the coordinate frame attached to link J. The

00:05:21.960 --> 00:05:28.590
axis of joint J is aligned with the Z axis
of the previous coordinate frame, that's coordinate

00:05:28.590 --> 00:05:35.000
frame J-1 and again, this is a confusing aspect
for people who is starting out learning about

00:05:35.000 --> 00:05:41.300
this notation. For the case of a prismatic
or sliding joint, the motion must be along

00:05:41.300 --> 00:05:47.389
the Z axis. So, for rotational joint, rotate
around the Z axis of the previous frame for

00:05:47.389 --> 00:05:53.160
a prismatic joint, we translate along the
Z axis of the previous frame.

00:05:53.160 --> 00:06:00.030
The relative pose from the frame of 1 link
to the next is described by 4 elementary transformations.

00:06:00.030 --> 00:06:05.490
For an n-link robot, we can stack groups of
these elementary transformations and each

00:06:05.490 --> 00:06:10.900
group contains 4 parameters which described
the relationship between 1 link frame and

00:06:10.900 --> 00:06:16.850
the next. If the robot has got all revolute
joints then, the joint angles correspond to

00:06:16.850 --> 00:06:22.550
the theta values shown here. So, these are
the joint variables. They change as the robot

00:06:22.550 --> 00:06:27.470
moves. All the other parameters, the D's,
the A's and the alpha's are all constant.

00:06:27.470 --> 00:06:33.790
Elas são funções do projeto mecânico do robô
em particular. Vamos considerar um

00:06:33.790 --> 00:06:38.830
robô que tem uma articulação prismática. 
Sua segunda junta é prismática. Como a 

00:06:38.830 --> 00:06:45.520
a primeira junta é de revolução, substituimos
Q1 aqui. Para a segunda junta, que é prismática,

00:06:45.520 --> 00:06:52.240
substituimos Q2 aqui. Para uma articulação desse
tipo, teta 2 é uma constante, assim como A2 e alfa

00:06:52.240 --> 00:06:57.770
2. Elas são funções do projeto mecânico desse
robô em particular.

00:06:57.770 --> 00:07:01.669
A maior vantagem da notação Denavit-Hartenberg
é que ela nos permite descrever um robô de forma

00:07:01.669 --> 00:07:07.530
muito concisa. Então, para um robô
de 2 ligações, pode ser descrito simplismente 
por uma tabela como esta.

00:07:07.530 --> 00:07:13.669
Temos uma coluna para cada parâmetro de Denavit-Hartenberg, 
e uma linha para cada articulação

00:07:13.669 --> 00:07:19.860
do robô. As variavéis de articulação Q1 e Q2
estão na coluna de teta porque elas são juntas

00:07:19.860 --> 00:07:25.830
de revolução. Os valores D são todos 0. Não existe 
translações ao longo do eixo Z porque este robô 

00:07:25.830 --> 00:07:31.840
existe em um plano e o comprimento da ligação 2 apareçe
na coluna A e os valores de alfa são todos iguais a 0.

00:07:31.840 --> 00:07:37.050
Portanto, essa tabela muito compacta descreve 
completamente o que chamamos de cinemáticas do robô.

00:07:37.050 --> 00:07:43.690
A toolbox robótica está muito bem configurada 
para lidar com a notação Denavit-Hartenberg.

00:07:43.750 --> 00:07:49.820
Irei criar uma matrix Denavit-Hartenberg, e cada
linha nesta matrix representa uma única

00:07:49.820 --> 00:07:53.520
ligação. É bem parecida com a tabela que olhamos
um instante atrás. Agora, irei inserir

00:07:53.520 --> 00:08:01.250
números correspondentes às colunas dessa 
tabela; teta, D, A e alfa para a primeira

00:08:01.250 --> 00:08:10.300
articulação e teta, D, A e alfa para a segunda
articulação. E terminar o deslocamento de matriz, 
eu tenho

00:08:10.300 --> 00:08:17.110
uma matriz simples 2 por 4 que contém um parâmetro
de Denavit-Hartenberg para um robô de duas articulações.

00:08:17.110 --> 00:08:21.889
Ao passo que eu crio um objeto robô, irei colocá-lo 
dentro da uma variável R na área de trabalho e 

00:08:21.889 --> 00:08:27.199
posso usar a função serial link da caixa de
ferramentas. E eu passo a matriz de parâmetros de 

00:08:27.199 --> 00:08:33.709
Denavit-Hartenberg e o resultado é um objeto serial link
criado na minha área de trabalho e o objeto serial link

00:08:33.709 --> 00:08:41.110
representa o braço de um robô. Podemos ver aqui 
que são exibidos os parâmetros de Denavit-Hartenberg

00:08:41.110 --> 00:08:45.589
em forma de tabela. Existem alguns parâmetros
adicionais ao redor da parte inferior que 

00:08:45.589 --> 00:08:48.209
apresentaremos em breve.

00:08:48.209 --> 00:08:52.869
Assim que eu tiver esse objeto, posso
executar algumas funções simples nele e posso
plotar o

00:08:52.869 --> 00:08:59.230
robô com a configuração onde os ângulos das
articulações são, talvez, 0.2 radianos ou 0.3 radianos

00:08:59.230 --> 00:09:04.860
e é assim que se parece e também posso criar
um painel de controle.

00:09:04.860 --> 00:09:09.850
Então, aqui temos um painel de controle, que traz
o controles deslizantes que vimos antes, e nos permite 

00:09:09.850 --> 00:09:12.970
mover as articulações do braço do robô.

00:09:12.970 --> 00:09:20.660
O objeto do robô também tem um método cinemático direto. 
Então, eu posso aplicá-lo no objeto do

00:09:20.660 --> 00:09:27.189
robô. É o método fkine e se eu passar, por 
exemplo, os angulos das articulações 0.2 e

00:09:27.189 --> 00:09:36.199
0.3, irá me retornar uma transformação homogênea que 
representa a pose do efetuador desse robô.

00:09:36.199 --> 00:09:41.819
Podemos ver aqui que a coordenada X e a 
coordenada Y e esta matrix aqui representa 

00:09:41.819 --> 00:09:48.999
a orientação do efetuador desse robô. 
Para um robô mais complexo, como o Puma 

00:09:48.999 --> 00:09:54.949
560, ela pode ser descrita por uma tabela 
como essa. Mais uma vez, a tabela tem 4 colunas

00:09:54.949 --> 00:10:00.579
neste caso, ela tem 6 linhas porque tem
6 juntas, porque esse robô é todo revoluto,

00:10:00.579 --> 00:10:05.819
encontramos todas as articulações verbais
na coluna teta. Na coluna D e na coluna A, 

00:10:05.819 --> 00:10:10.800
encontramos uma série de números que
correspondem os comprimentos físicos do robô Puma:

00:10:10.800 --> 00:10:15.209
O comprimento do braço, o comprimento
do antebraço, alguns deslocamentos horizontais e

00:10:15.209 --> 00:10:21.819
assim por diante, e a coluna alfa, encontramos
uma série de rotações que é pi sobre 2 ou 

00:10:21.819 --> 00:10:28.309
menos pi sobre 2 e dizem algo sobre orientação 
do eixo de rotação da articulação 1 assim como das

00:10:28.309 --> 00:10:31.369
outras articulações.

00:10:31.369 --> 00:10:35.660
Where MATLAB and robotics toolbox really come
into their own is when we're dealing with

00:10:35.660 --> 00:10:41.670
complex robots, those with 6 joints or more.
I can import a model of the classical Puma

00:10:41.670 --> 00:10:47.540
560 robot and it's created a verbal in the
workspace called P560 and I can have a look

00:10:47.540 --> 00:10:52.929
at that and here, we see a table which contains
the Denavit-Hartenberg parameters that described

00:10:52.929 --> 00:10:55.119
that particular robot.

00:10:55.119 --> 00:11:00.689
Now, I can plot that robot for a particular
joint angle configuration. Now, I'm going

00:11:00.689 --> 00:11:06.499
to use the variable QZ which was defined by
the function in the Puma 560. We can see that

00:11:06.499 --> 00:11:11.959
over here in the workspace. It's a vector
with 6 elements all equal to 0 and here, we

00:11:11.959 --> 00:11:18.819
see the robot in the configuration where all
its joint angles are equal to 0. Another configuration

00:11:18.819 --> 00:11:23.290
that was defined is this one QR which was
referred to the robot's ready pose and this

00:11:23.290 --> 00:11:27.110
is with the arm pointing straight up into
the air.

00:11:27.110 --> 00:11:31.420
I can also bring up a teach pendant on this
particular robot. Here, we see it. Now, I

00:11:31.420 --> 00:11:37.240
have got 6 sliders, 1 for each of its joints.
I can rotate it above the waist. I can move

00:11:37.240 --> 00:11:44.610
the shoulder down. I can lift the elbow up.
I'll move the elbow down, move it down a bit

00:11:44.610 --> 00:11:50.369
more and I can rotate it around the waist
so we can see what's going on.

00:11:50.369 --> 00:11:54.920
We can see the in-defector coordinate frame
there and if I adjust the wrist joint angles,

00:11:54.920 --> 00:12:01.399
we can see the orientation of the in-defector
changing. The object has got a forward kinematic

00:12:01.399 --> 00:12:06.749
method. So, if I asked for the forward kinematics
for a set of joint angles, perhaps the joint

00:12:06.749 --> 00:12:13.879
angles equal 0.1, 0.2, 0.3. I'm just making
up some numbers here. This is the homogeneous

00:12:13.879 --> 00:12:21.499
transformation which represents the pose of
the in-defector of this 6 axis Puma 560 robot.

00:12:21.499 --> 00:12:27.660
So, to use a very general mathematical notation,
we can say that the pose of an n-joint robot

00:12:27.660 --> 00:12:34.300
which I'm going to write as PSI N is a function
and the function is K and K stands for kinematics,

00:12:34.300 --> 00:12:39.369
a term that we will define concisely shortly
and it's a function of the joint configuration,

00:12:39.369 --> 00:12:42.730
that's the vector of the N joint variables.

00:12:42.730 --> 00:12:47.839
They might be angles or they might be links
in the case of a sliding joint. A vector of

00:12:47.839 --> 00:12:53.670
joint angles, a vector of link offsets, a
vector of link lengths and a vector of what

00:12:53.670 --> 00:12:58.429
are called link twists and a vector of joint
types.

00:12:58.429 --> 00:13:03.540
Sigma is a vector that contains elements which
are either R or P and they indicate whether

00:13:03.540 --> 00:13:09.480
the joint is revolute or prismatic. In the
case of a revolute joint, we substitute the

00:13:09.480 --> 00:13:16.179
corresponding element of theta from the corresponding
element of Q and for prismatic joint, we substitute

00:13:16.179 --> 00:13:23.519
the corresponding element of D from the corresponding
element of Q. All the other elements of D,

00:13:23.519 --> 00:13:26.100
theta, A and alpha are constant.

