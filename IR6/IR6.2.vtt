WEBVTT
Kind: captions
Language: pt-BR

00:00:03.980 --> 00:00:08.850
Aqui eu criei um robô bem simples com Lego.
Ele tem um uma simples junta rotacional

00:00:08.850 --> 00:00:14.309
ou uma junta revolucional. E a posição do efetuador
do robô consegue seguir qualquer ponto

00:00:14.309 --> 00:00:18.550
ao redor de um círculo se não for particularmente
interessante ou particularmente útil.

00:00:18.550 --> 00:00:25.390
O que estamos interessados agora é descrever agora a
posição do efetuador desse robô

00:00:25.390 --> 00:00:30.829
de uma junta. O efetuador é indicado por esse
símbolo aqui. Nós iremos relembrar da ultima

00:00:30.829 --> 00:00:35.600
lição que quando nós queremos descrever a
posição de um objeto em duas dimensões, nós unimos

00:00:35.600 --> 00:00:40.370
a estrutura de coordenadas a isso e a posição
do objeto é descrita pela posição

00:00:40.370 --> 00:00:45.090
da origem da coordenada do quadro e a
orientação do objeto é descrita

00:00:45.090 --> 00:00:51.309
pelo ângulo entre a estrutura de coordenadas e 
e o sistema de coordenadas de referência. Eu tenho indicado

00:00:51.309 --> 00:00:56.109
aqui o sistema de coordenadas de referência com os
eixos x e y.

00:00:56.109 --> 00:01:01.820
A primeira coisa que faremos é rotacionar
o sistema de coordenadas por um ângulo Q1. Esse é

00:01:01.820 --> 00:01:10.410
o ângulo da junta do nosso robô de 1 grau de liberdade.
Então eu irei aplicar uma transformação homogênea,

00:01:10.410 --> 00:01:17.040
uma rotação, por um ângulo Q1. E agora eu vou
traduzir esse sistema de coordenadas ao longo do

00:01:17.040 --> 00:01:23.500
elo do robô. Então eu agora irei aplicar
a translação na direção x. O quadro

00:01:23.500 --> 00:01:29.440
de coordenadas cinza mostrado aqui representa a
posição do robô. Nós conseguimos o sistema de coordenadas

00:01:29.440 --> 00:01:35.580
do efetuador rotacionando e transaladando o
sistema de coordenadas de referência. Todas essas

00:01:35.580 --> 00:01:42.160
transformações são em duas dimensões. Então dizemos
que eles pertencem ao conjunto SE2. Esse é o conjunto

00:01:42.160 --> 00:01:47.490
de todas as translações e rotações em duas dimensões.

00:01:47.490 --> 00:01:52.470
Usando o que aprendemos na ultima lição,
eu posso expandir isso. Logo, eu posso multiplicar

00:01:52.470 --> 00:01:57.570
as duas matrizes juntas e apareço com
uma matriz de transformação única

00:01:57.570 --> 00:02:03.210
que descreve a posição do efetuador.
A posição final do efetor é dada

00:02:03.210 --> 00:02:07.430
por esses dois elementos nessa matriz de 
transformação homogênea e eu escrevi

00:02:07.430 --> 00:02:13.310
ela aqui. E nós podemos ver que eles descrevem um 
conjunto de pontos no qual se dispõem em um círculo de raio

00:02:13.310 --> 00:02:14.019
A1.

00:02:14.019 --> 00:02:20.500
Logo a posição do efetuador é uma função do
ângulo Q1 da junta e a orientação

00:02:20.500 --> 00:02:26.920
do efetuador que é dada por essa matriz
aqui é também uma função de Q1. Então isso é

00:02:26.920 --> 00:02:32.560
impossível para nós configurarmos a posição e
a orientação do robô de forma independente.

00:02:32.560 --> 00:02:39.879
Não há suficientes juntas ou graus de 
liberdade num simples robô como esse

00:02:39.879 --> 00:02:43.989
Vamos ver o andamento no MATLAB. Eu vou
definir um par de variáveis

00:02:43.989 --> 00:02:51.489
A1 que representa o comprimento do primeiro 
elo e Q1 que representa o ângulo da junta.

00:02:51.489 --> 00:02:56.730
Agora, para determinar a posição do efetuador,
Eu preciso multiplicar juntos os pares

00:02:56.730 --> 00:02:58.560
de transformações elementais.

00:02:58.560 --> 00:03:05.150
Uma forma fácil de fazer usando usando a toolbox de robotica
é com a função chamada trchain2. Ela calcula

00:03:05.150 --> 00:03:08.620
O resultado de uma cadeia de transformações homogêneas.

00:03:08.620 --> 00:03:14.780
O primeiro na rotação em cadeia por Q1 e
esse seguido por uma translação na 

00:03:14.780 --> 00:03:21.510
direção x, que é ao longo do elo pela distância
A1. Eu então a represento como uma string no MATLAB

00:03:21.510 --> 00:03:29.310
e então eu passo o ângulo da junta que eu estou
interessado no qual é Q1 e aqui está o resultado.

00:03:29.720 --> 00:03:36.739
O que aconteceu é que quando o trchain2 está sendo
executado, ele procura pela variável A1 na

00:03:36.739 --> 00:03:43.150
área de trabalho e ela procura pela variável
Q1 como sendo o primeiro elemento do vetor

00:03:43.150 --> 00:03:49.939
que eu passei. A1 da área de trabalho. Q1
vem do vetor atribuído. Aqui está na forma

00:03:49.939 --> 00:03:57.079
numérica a matriz homogênea de transformação 3x3
representando a posição do efetuador

00:03:57.079 --> 00:04:00.459
do nosso simples robô de uma articulação

00:04:00.459 --> 00:04:07.120
Agora posso fazer isso usando símbolos ao invés de números.
E para isso, chame algumas funções do toolbox

00:04:07.120 --> 00:04:13.689
symbolic do MATLAB e eu irei dizer
que Q1 é um símbolo e A1 é um símbolo.

00:04:13.689 --> 00:04:17.470
Agora o que farei é só repetir o
comando que eu fiz anteriormente.

00:04:17.470 --> 00:04:22.200
E o que temos aqui é uma representação simbólica
da posição do efetuador; o mesmo

00:04:22.200 --> 00:04:28.180
que fizemos no slide anterior. Um outro que posso
fazer usando o toolbox de robótica é importar

00:04:28.180 --> 00:04:37.380
um modelo de um robô mono-articulado planar. Eu faço
isso com a função mdl_planar1 e nós

00:04:37.380 --> 00:04:41.820
criamos uma nova variável na área de trabalho;
variável chamada P1. Pode-se ver que esse é

00:04:41.820 --> 00:04:46.720
um elo serial de tipo. Esse é um objeto do tipo
manipulador de robô.

00:04:46.720 --> 00:04:51.760
Agora com esse tipo singular de objeto, tem-se
vários métodos. Um método interessante

00:04:51.760 --> 00:04:57.480
é o método teach e se eu chamá-lo, tudo
que você pode ver aqui é uma representação gráfica

00:04:57.480 --> 00:05:03.480
de um robô mono-articulado e um simples painel de controle
um simples controle deslizante aqui. E enquanto eu ajusto

00:05:03.480 --> 00:05:10.850
o controle podemos ver o robô se mover. Eu estou ajustando
o valor do primeiro ângulo da junta. O que nós

00:05:10.850 --> 00:05:19.170
vemos aqui são as coordenadas xy do efetuador
do robô mudando enquanto eu ajusto cada ângulo da junta.
