WEBVTT
Kind: captions
Language: en-GB

00:00:03.800 --> 00:00:06.700
Vamos dar uma olhada em um exemplo um pouco mais realístico.

00:00:07.600 --> 00:00:10.400
Eu tenho aqui um carro de duas dimensões e

00:00:10.410 --> 00:00:15.480
um sistema de coordenadas de duas dimensões. Eu chamei
esse sistema de cordenadas W, e isso significa

00:00:15.480 --> 00:00:21.589
o sistema de coordenadas universal e isso é algo
bastante comum em robótica, ter um sistema de

00:00:21.589 --> 00:00:27.230
referência onde todas as outras coordenadas são
descritas em relação a ele. E para indicar

00:00:27.230 --> 00:00:33.260
isso bem, bem claramente, eu marquei os
eixos x e y com o subscrito W, de forma que está

00:00:33.260 --> 00:00:40.170
muito, muito claro que esse é o eixo X do
sistema de coordenadas W e o eixo y do sistema de coordenadas W.

00:00:40.170 --> 00:00:45.309
Agora vamos indicar alguns pontos de interesse
nesse carro, o banco esquerdo: o banco direito,

00:00:45.309 --> 00:00:50.210
um dos espelhos, alças das portas, e talvez
onde nós reabastecemos ele. Eu posso descrever cada um

00:00:50.210 --> 00:00:55.489
desses pontos com um vetor, com relação ao
sistema de coordenadas universal.

00:00:55.489 --> 00:01:00.730
Vaos agora imaginar que um carro se moveu, e agora
está aqui. Eu poderia agora descrever todos esses 

00:01:00.730 --> 00:01:06.900
pontos novamente em termos de vetores com relação
a origem do sistema de coordenadas universal.

00:01:06.900 --> 00:01:10.790
Mas isso é um pouco entendiante porque os
pontos na verdade não se moveram com relação

00:01:10.790 --> 00:01:15.580
ao carro, e o carro inteiro se moveu e agora
eu tenho que redefinir todos os vetores novamente.

00:01:15.580 --> 00:01:20.160
Talvez, tenha uma maneira melhor. E ai está,
nós vamos usar a ideia do sistema de coordenadas

00:01:20.160 --> 00:01:24.120
uiversal novamente e nós vamos criar um novo
sistema de coordenadas e eu vou anexá-lo 

00:01:24.120 --> 00:01:30.120
ao carro. Eu chamei esse sistema de C - C de 
carro. E só para ser claro, eu chamei os

00:01:30.120 --> 00:01:37.110
Eixos XC e YC: Os eixos X e Y são o sistema de
coordenadas que estão anexados ao carro. Agora é

00:01:37.110 --> 00:01:42.710
apenas uma questão de descrever todos esses pontos
de interesse do carro em termo de vetores

00:01:42.710 --> 00:01:49.030
com relação ao sistema de coordenadas do carro.
Agora se eu movi o carro, os vetores mudaram

00:01:49.030 --> 00:01:54.270
com respeito ao universal mas eles não
mudaram com relação ao sistema de coordenadas do carro.

00:01:54.850 --> 00:02:00.930
Let's simplify things a bit and introduce
a pose here. So introduce another one of these

00:02:00.930 --> 00:02:05.880
fat arrows which represents a pose, and this
is the pose from the world coordinate frame

00:02:05.880 --> 00:02:12.410
to the car's coordinate frame so it's W ksi Z.
Now let's look at just a single point, one

00:02:12.410 --> 00:02:16.690
of the points on the door of the car. I'm
going to label that point d and we created

00:02:16.690 --> 00:02:23.560
vector from frame C to this point d, and we
denote that in the way we've already discussed

00:02:23.560 --> 00:02:29.020
we use a symbol P to denote that we're talking
about a vector. C is the reference frame so

00:02:29.020 --> 00:02:34.850
this is a vector with respect to frame C,
so it begins at the origin of frame C and

00:02:34.850 --> 00:02:41.610
it goes to the point d. Now let's consider
that I want to know what is this vector: the

00:02:41.610 --> 00:02:46.830
point D with respect to the world coordinate
frame. In some sort of simplistic way, what

00:02:46.830 --> 00:02:52.100
I want to do is to add these 2 arrows. I want
to move along here, and I want to move along

00:02:52.100 --> 00:02:59.370
here. But it's not quite that simple, we can't
add a pose and a vector. We can't add a fat

00:02:59.370 --> 00:03:03.990
arrow to a thin arrow. Poses and vectors are
different mathematical objects so we need

00:03:03.990 --> 00:03:06.030
to do this a little bit carefully.

00:03:06.030 --> 00:03:11.900
The way we do it is to introduce a new operator,
and it's the dot. In this formalism, we have

00:03:11.900 --> 00:03:17.600
a pose and it operates on a vector in order
to transform it to a different coordinate

00:03:17.600 --> 00:03:23.180
frame. That's what this operator dot does:
it transforms this vector which describes

00:03:23.180 --> 00:03:29.110
the point d with respect to the coordinate
frame C, to a vector that describes the point

00:03:29.110 --> 00:03:34.709
d with respect to the coordinate frame W.
It performs a transformation between coordinate

00:03:34.709 --> 00:03:39.819
frames. All of this is rather abstract. I’ve
introduced this operator dot, but I haven't

00:03:39.819 --> 00:03:45.130
told you actually what it is - how would you
code it? And, we introduced this abstract

00:03:45.130 --> 00:03:50.170
pose thing described by the Greek letter ksi
- and I haven't said exactly what that is

00:03:50.170 --> 00:03:54.830
or how you could code that or implement that.
These are things would get to in the following

00:03:54.830 --> 00:03:56.370
sections in this lecture.

