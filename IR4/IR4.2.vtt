WEBVTT
Kind: captions
Language: en

00:00:03.530 --> 00:00:08.870
Queremos a posição e orientação do nosso 
Robô para variar suavemente com o tempo

00:00:08.870 --> 00:00:11.429
Seguindo a trajetória. 

00:00:11.429 --> 00:00:13.309
Queremos fazer isso por várias razões.

00:00:13.309 --> 00:00:17.640
Primeiramente, queremos reduzir a velocidade 
máxima do robô.

00:00:17.640 --> 00:00:21.590
Se Podemos reduzir o pico de aceleração do robô, 
então podemos reduzir o tamanho dos 

00:00:21.590 --> 00:00:23.790
motores que são necessários.

00:00:23.790 --> 00:00:28.860
Se a trajetória é suave, então não vai 
induzir vibrações na estrutura

00:00:28.860 --> 00:00:29.860
do robô.

00:00:29.860 --> 00:00:34.500
E, isso é um assunto importante para grandes robô. 
Porém, isso levanta a seguinte questão, 

00:00:34.500 --> 00:00:35.860
o que é suave?

00:00:35.860 --> 00:00:44.050
Agora, em primeiro lugar, queremos a posição 
do robô X em função do tempo para ser contínuo,

00:00:44.050 --> 00:00:46.410
não ter descontinuidades.

00:00:46.410 --> 00:00:50.769
Queremos também que a velocidade e a 
aceleração sejam contínuas.

00:00:50.769 --> 00:00:55.460
E talvez, queremos a 3º e a 4º derivada de 

00:00:55.460 --> 00:00:58.610
forma continua e assim por diante.

00:00:58.610 --> 00:01:05.320
Há varias funções matematicas suaves,
senoidais, gaussianas e polinômios que 

00:01:05.320 --> 00:01:07.220
podemos usar para o serviço.

00:01:07.220 --> 00:01:10.280
Na robótica, é comum usar funções polinomiais.

00:01:10.280 --> 00:01:15.840
E, o polinômio quintico, é um polinômio de 
ordem cinco, é particularmente útil.

00:01:15.840 --> 00:01:20.250
O polinômio quintico possui 6 coeficientes,
A, B, C, D, E e F.


00:01:20.250 --> 00:01:25.240
Vamos considerar o caso S como uma função de T.
Então, S é uma posição que 

00:01:25.240 --> 00:01:32.340
estamos interessados em mais de uma trajetória que
começa no tempo 0 e termina no tempo T. A vantagem

00:01:32.340 --> 00:01:37.500
do polinômio quintico é que ele tem seis coeficientes
e isso significa que ele tem seis condições de limite.

00:01:37.500 --> 00:01:43.979
Isso significa que podemos definir a posição 
independente da velocidade e da aceleração

00:01:43.979 --> 00:01:47.359
Do tempo inicial e final.

00:01:47.359 --> 00:01:52.299
A tabela a seguir, mostra os nomes dos símbolos que usamos 
para demonstrar as condições dos limites condicionais,

00:01:52.299 --> 00:01:58.290
Posições iniciais e finais e aceleração inicial 

00:01:58.290 --> 00:02:00.240
e final.

00:02:00.240 --> 00:02:04.750
Aqui está nosso polinômial quintico novamente e eu posso 
calcular sua derivada em relação ao

00:02:04.750 --> 00:02:05.750
tempo

00:02:05.750 --> 00:02:10.820
Então, essa velocidade e aceleração longo 
do caminho é obtida

00:02:10.820 --> 00:02:13.390
Por mais uma derivação.

00:02:13.390 --> 00:02:16.430
Eu posso substituir as condições de fronteira.

00:02:16.430 --> 00:02:19.940
Quando o tempo é igual a 0, eu tenho essas 
relações aqui.

00:02:19.940 --> 00:02:24.610
E quando eu tenho o tempo igual a T, tenho 
essas relações aqui.

00:02:24.610 --> 00:02:29.520
Agora, eu posso escrever essas seis equações 
em forma de matriz.

00:02:29.520 --> 00:02:31.440
É mais ou menos assim.

00:02:31.440 --> 00:02:33.540
A matriz é 6 por 6.

00:02:33.540 --> 00:02:36.840
É quandratica, o que significa que eu posso 
inverter ela.

00:02:36.840 --> 00:02:41.319
E agora, o q eu tenho é uma relação que me da os 
coeficientes polinomiais A através

00:02:41.319 --> 00:02:47.310
de F em termos das condições de fronteira e
uma matriz que é essencialmente uma função do


00:02:47.310 --> 00:02:50.269
tempo de trajetória e algumas constantes.

00:02:50.269 --> 00:02:54.590
Let’s create a polynomial trajectory and
to do that I’m going to use the Toolbox

00:02:54.590 --> 00:02:59.670
function tpoly, short hand for trajectory
polynomial.

00:02:59.670 --> 00:03:05.200
The polynomial is going to have an initial
value of 0, a final value of 1 and there are

00:03:05.200 --> 00:03:07.400
going to be 50 time steps.

00:03:07.400 --> 00:03:10.819
And here, we can see the trajectory.

00:03:10.819 --> 00:03:17.630
We can see that S starts off at 0 and rises
smoothly and settles out at a value of 1.

00:03:17.630 --> 00:03:24.340
We can see that the velocity starts at 0 and
ends at 0 and the acceleration also starts

00:03:24.340 --> 00:03:26.640
and ends at the value of 0.

00:03:26.640 --> 00:03:29.760
And so, change the final condition.

00:03:29.760 --> 00:03:36.090
So, instead of going from 0 to 1, it goes
from 0 to -1 and we can see the polynomial

00:03:36.090 --> 00:03:39.650
now does exactly that.

00:03:39.650 --> 00:03:45.160
I can get the value of the variable S from
this function if I provide an output argument

00:03:45.160 --> 00:03:52.420
and instead of producing a plot it will return
the vector S. And now, we have in our workspace

00:03:52.420 --> 00:03:58.690
S which is a vector with 50 rows and one column,
represents the value of S at each of the 50

00:03:58.690 --> 00:04:00.909
time steps.

00:04:00.909 --> 00:04:06.470
I can also ask for the velocity and the acceleration
and I’m going put those in to the variables

00:04:06.470 --> 00:04:11.370
SD and STD for S dot and S double dot.

00:04:11.370 --> 00:04:17.079
And again, I have created in my work space
some additional vector variables, each of

00:04:17.079 --> 00:04:18.810
them has got 50 rows.

00:04:18.810 --> 00:04:21.840
The rows correspond to the time steps.

00:04:21.840 --> 00:04:26.539
You'll notice in all the plots that the initial
and final velocities have been equal to 0.

00:04:26.539 --> 00:04:33.780
Well, I can override that by providing explicit
values for the initial and I’m going to

00:04:33.780 --> 00:04:38.061
ask the initial velocity to be 0.5 and
I’m going to ask for the final velocity

00:04:38.061 --> 00:04:39.410
to be equal to 0.

00:04:39.410 --> 00:04:44.620
What you can see is the initial velocity now
is equal to 0.5, final velocity is equal to

00:04:44.620 --> 00:04:45.620
0.

00:04:45.620 --> 00:04:49.670
But, what you'll notice is if you look at
the plot of S, you’ll see that it has gone

00:04:49.670 --> 00:04:53.210
from 0 to 1, but it has massively overshot.

00:04:53.210 --> 00:05:00.330
It has gone up as high as 5 and then reduced
to the desired final value.

00:05:00.330 --> 00:05:04.770
By changing the boundary conditions, we have
dramatically changed the shape of the trajectory.

00:05:04.770 --> 00:05:11.400
So, we have seen that the quintic polynomial
makes nice, smooth curves moving from 0 to

00:05:11.400 --> 00:05:17.330
1 over a period of 50 time units and we can
see that the velocity is smooth and the acceleration

00:05:17.330 --> 00:05:18.330
is smooth.

00:05:18.330 --> 00:05:20.190
But, there’s a bit of a problem here.

00:05:20.190 --> 00:05:26.870
That is that the peak velocity that the robot
undertakes has got a value of 0.038 units,

00:05:26.870 --> 00:05:30.990
but the average velocity over the path is
much, much less.

00:05:30.990 --> 00:05:32.850
It’s only .02.

00:05:32.850 --> 00:05:37.020
On average, we’re only going at 52% of the
peak velocity for this path.

00:05:37.020 --> 00:05:41.820
So, that means that for most of the path,
the motor isn't working as hard as it could

00:05:41.820 --> 00:05:42.820
be.

00:05:42.820 --> 00:05:47.500
It means that we have to install a motor which
can go at this peak speed but mostly we’re

00:05:47.500 --> 00:05:48.810
not using that capacity.

00:05:48.810 --> 00:05:50.240
We’re wasting performance.

00:05:50.240 --> 00:05:54.150
It also means that it’s going to take us
longer to get where we want to go.

