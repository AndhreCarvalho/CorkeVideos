WEBVTT
Kind: captions
Language: en

00:00:03.649 --> 00:00:08.139
Muitas maquinas e robôs tem múltiplos
eixos de movimento.

00:00:08.139 --> 00:00:14.150
Um robô industrial tipicamente tem seis juntas
e eles tem que se mover suavemente e de uma maneira

00:00:14.150 --> 00:00:15.150
coordenada.

00:00:15.150 --> 00:00:19.620
Uma técnica que podemos usar para nos ajudar é interpolação
linear.

00:00:19.620 --> 00:00:25.619
Considere essa simples função aqui onde x
de s é uma função com um valor inicial de

00:00:25.619 --> 00:00:27.619
x e um valor final de x.

00:00:27.619 --> 00:00:30.009
E, s varia de 0 até 1.

00:00:30.009 --> 00:00:34.120
Nesse caso, então, x de s é um time de
valor intermediário.

00:00:34.120 --> 00:00:41.520
X de 0 é o valor iicial, x de 1 é o
valor final, e x de 0.5 é a metade entre

00:00:41.520 --> 00:00:43.580
o valor inicial e final.

00:00:43.580 --> 00:00:48.140
Agora, x pode ser um vetor, o que faz o caso
multi-dimensional bem direto.

00:00:48.140 --> 00:00:54.270
Por exemplo, ele poderia ser a posição xyz
de algum tipo de máquina ou robô simples.

00:00:54.270 --> 00:00:59.420
Assim, x é um vetor com três elementos
xyz e nós podemos interpolar linearmente entre

00:00:59.420 --> 00:01:04.330
uma posição inicial, um xyz inicial e um
xyz final.

00:01:04.330 --> 00:01:08.190
S é um escalar que varia de 0 a 1.

00:01:08.190 --> 00:01:09.540
Então, o que é s?

00:01:09.540 --> 00:01:13.500
Bem, S é um escalar que varia suavemente entre 
0 e 1.

00:01:13.500 --> 00:01:19.680
E, se S é uma função suave do tempo, então
x será uma função suave do tempo uma vez que

00:01:19.680 --> 00:01:26.100
x é simplesmente uma função linear de S. Nós já
sabemos como fazer uma função do tempo variante

00:01:26.100 --> 00:01:27.100
e suave.

00:01:27.100 --> 00:01:31.909
Ela pode ser uma função polynomial do tempo ou
ela pode ser uma função do tempo de perfil de

00:01:31.909 --> 00:01:33.310
velocidade trapezoidal.

00:01:33.310 --> 00:01:35.960
Vejamos um exemplo bidimensional.

00:01:35.960 --> 00:01:40.960
Nos queremos mover em um plano xy e eu
adquiri um ponto inicial e um ponto final.

00:01:40.960 --> 00:01:44.720
Agora, eu quero mover em uma linha reta entre
o início e o fim.

00:01:44.720 --> 00:01:49.110
Eu vou atribuir coordenadas arbitrárias
ao início e ao fim.

00:01:49.110 --> 00:01:54.370
Nós voltamos ao MATLAB e agora nosso primeiro ponto
é um vetor, não um escalar.

00:01:54.370 --> 00:02:03.560
Assim, o primeiro ponto é a coordenada 10,
20, e nosso último ponto é o vetor 30,10.

00:02:03.560 --> 00:02:10.069
E dessa vez, eu vou usar a função
jtraj, de trajetória interpolada de juntas.

00:02:10.069 --> 00:02:18.170
Eu vou mover do primeiro ponto para
o último ponto em 50 passos de tempo, e nós vemos

00:02:18.170 --> 00:02:19.659
tudo passando.

00:02:19.659 --> 00:02:26.630
Se nós voltarmos, nós vemos que o primeiro ponto
realmente moveu o vetor do valor de 10 e

00:02:26.630 --> 00:02:31.870
20, e o último ponto tem o valor de 
30 e 10.

00:02:31.870 --> 00:02:39.079
Let’s plot x as a function of time and we
can see here that our first axis has moved

00:02:39.079 --> 00:02:44.340
from 10 up to 30, second axis has moved from
20 down to 10.

00:02:44.340 --> 00:02:46.859
This function also returns the velocity.

00:02:46.859 --> 00:02:50.959
So, I can add that as an extra output argument,
XD.

00:02:50.959 --> 00:02:59.629
And now, we see x velocity as well and I can
plot XD versus time, and we can see that the

00:02:59.629 --> 00:03:05.389
velocity of each axis starts and ends at 0
and has a finite value in between.

00:03:05.389 --> 00:03:12.260
The function also allows me to specify an
initial and final velocity for the trajectory.

00:03:12.260 --> 00:03:17.280
So, if I ask for the initial velocity to be
0 which is the default condition, if I ask

00:03:17.280 --> 00:03:19.640
for the final velocity to be equal to 10.

00:03:19.640 --> 00:03:26.080
Now, if I plot the trajectory versus time,
we can see that at the end of a trajectory,

00:03:26.080 --> 00:03:32.310
the slopes of a line are not equal to 0 and
that’s because it is achieving its destination

00:03:32.310 --> 00:03:36.959
position at a finite velocity as we specified.

00:03:36.959 --> 00:03:40.329
Let’s consider a more complex two-dimensional
example.

00:03:40.329 --> 00:03:43.579
I’m going to start and end at this point
in the XY plane.

00:03:43.579 --> 00:03:48.909
I’m going to move to this point, this point,
this point, and back to where I started from.

00:03:48.909 --> 00:03:51.849
So, there are now three via points.

00:03:51.849 --> 00:03:55.010
I can assign some arbitrary coordinates to
these.

00:03:55.010 --> 00:03:59.109
In order to move smoothly through the via
points, we need to introduce blends and we

00:03:59.109 --> 00:04:02.060
talked about blends in a previous section.

00:04:02.060 --> 00:04:08.189
Here, we want to apply this idea of blends
which, in this example, is shown for a scalar

00:04:08.189 --> 00:04:09.189
variable x.

00:04:09.189 --> 00:04:13.560
We want to apply it to a multi-dimensional
case because now we’re talking about a robot

00:04:13.560 --> 00:04:16.630
moving in the xy plane.

00:04:16.630 --> 00:04:22.120
So now, each of the positions XI is a vector
rather than a scalar.

00:04:22.120 --> 00:04:27.460
Now, we’re going to look at a scenario where
points on the trajectory are vector quantities,

00:04:27.460 --> 00:04:30.860
two-vector in this case, and we have via points.

00:04:30.860 --> 00:04:34.069
Let’s do this square trajectory in MATLAB.

00:04:34.069 --> 00:04:45.780
Our starting coordinate is 40, 50 and the
via points are 60, 30 which is one row of

00:04:45.780 --> 00:04:54.039
the matrix, 40, 10 which is another row of
the matrix, 20, 30 and we finish where we

00:04:54.039 --> 00:04:55.039
started.

00:04:55.039 --> 00:04:57.800
And, that’s the list of via points.

00:04:57.800 --> 00:05:01.550
Now, I use the Toolbox function, mstraj.

00:05:01.550 --> 00:05:05.150
I pass in the list of via points.

00:05:05.150 --> 00:05:09.379
Passing the speed at which we’re going to
move along the path, the time of the segments

00:05:09.379 --> 00:05:10.710
é o padrão.

00:05:10.710 --> 00:05:13.970
Agora, comece a coordenar.

00:05:13.970 --> 00:05:19.599
O intervalo de tempo, 0.1 segundos e o tempo de
aceleração, que eu vou considerar ser apenas

00:05:19.599 --> 00:05:21.509
1 segundo.

00:05:21.509 --> 00:05:25.430
E, eu criei na área de trabalho a variável x.

00:05:25.430 --> 00:05:32.979
Tem 435 linhas, então isso significa que a
tragetória de tempo levou 435 etapas para executar

00:05:32.979 --> 00:05:35.120
cada etapa de 0.1 segundos.

00:05:35.120 --> 00:05:38.199
Que são 43.5 segundos para executar.

00:05:38.199 --> 00:05:45.180
Eu posso traçar x versus tempo e podemos ver a
trajetória da primeira e segunda coordenadas

00:05:45.180 --> 00:05:48.680
versus a primeira coordenada mostrada em azul.

00:05:48.680 --> 00:05:53.840
Se eu traçar a primeira coordenada contra a
segunda coordenada, então essa poderia ser a

00:05:53.840 --> 00:05:57.060
coordenada x e essa poderia ser a coordenada y.

00:05:57.060 --> 00:05:58.729
Eu tenho uma plotagem como essa.

00:05:58.729 --> 00:06:04.470
Então, isso mostra o movimento do ponto no
plano xy e, de fato, tem o perfil

00:06:04.470 --> 00:06:08.830
quadrado que estamos procurando, mas possui
os cantos arredondados porque nós especificamos

00:06:08.830 --> 00:06:11.310
um tempo finito de aceleração.

00:06:11.310 --> 00:06:14.620
Vamos considerar agora um grau extra de dificuldade.

00:06:14.620 --> 00:06:18.599
Vamos considerar que a máquina é capaz
de se mover 2 metros por segundo na direção x,

00:06:18.599 --> 00:06:22.520
mas apenas 1 metro por segundo na direção y.

00:06:22.520 --> 00:06:27.310
Nós temos que levar isso em conta quando
calculamos a tragetória do robô.

00:06:27.310 --> 00:06:31.030
Considere novamente este caminho bidimensional
e esse é o caminho que nós desejamos do

00:06:31.030 --> 00:06:33.750
início ao fim, esse é o caminho que queremos.

00:06:33.750 --> 00:06:39.199
Mas se o robô é capaz de se mover mais
rapidamente na direção x que na direção y,

00:06:39.199 --> 00:06:41.439
o caminho pode ser algo como isso.

00:06:41.439 --> 00:06:46.030
Ele irá, muito rapidamente na direção x
e também se move um pouco na direção y.

00:06:46.030 --> 00:06:50.370
Mas então, o eixo x vai ter alcançado seu
objetivo, e ele vai parar de se mover.

00:06:50.370 --> 00:06:55.479
Mas, o eixo y que se move mais devagar
vai continuar se movendo, então nós acabamos com

00:06:55.479 --> 00:06:59.099
com essa curva acentuada em vez do caminho desejado.

00:06:59.099 --> 00:07:04.180
Se eu estivesse cortando material em algo como
uma máquina de mesa, então eu ficaria

00:07:04.180 --> 00:07:08.379
chateado se eu tivesse esse caminho no lugar
do caminho desejado.

00:07:08.379 --> 00:07:14.430
Então para alcançar o caminho desejado, nós
temos que levar em conta a velociadade de

00:07:14.430 --> 00:07:15.930
cada um dos eixos.

00:07:15.930 --> 00:07:21.490
Precisamos calcular quanto tempo o eixo mais lento
requer para chegar ao próximo ponto de passagem.

00:07:21.490 --> 00:07:26.719
E então, nós escalamos a velocidade do outro
eixo para que todos cheguem ao mesmo tempo

00:07:26.719 --> 00:07:31.550
no ponto de passagem, e então todos eles partirem
novamente para o próximo ponto de passagem.

00:07:31.550 --> 00:07:33.729
Repetimos esse processo indefinidamente.

00:07:33.729 --> 00:07:40.669
Agora, nós vamos repetir a trajetória,
mas desta vez nós vamos especificar as

00:07:40.669 --> 00:07:43.530
velocidades dos eixos como diferentes.

00:07:43.530 --> 00:07:48.930
Então, antes, a velocidade era 2 unidades
por segundo nas direções x e y.

00:07:48.930 --> 00:07:56.909
Agora, eu vou especificar um eixo x muito lento,
apenas 1 unidade por segundo, e um eixo y rápido.

00:07:56.909 --> 00:08:02.819
Se nós olharmos para o nível de trajetória na
nossa área de trabalho, nós veremos que possui 835 linhas,

00:08:02.819 --> 00:08:08.409
0.1 segundos por passo, significa que a trajetória
agora leva 83 segundos, quase o dobro do tempo.

00:08:08.409 --> 00:08:14.259
E isso é esperado, pois agora
a trajetória está sendo acompanhada pelo eixo

00:08:14.259 --> 00:08:15.259
mais lento.

00:08:15.259 --> 00:08:18.570
O eixo mais lento agora só pode se mover
1 unidade por segundo.

00:08:18.570 --> 00:08:24.330
Antes, eram 2 unidades por segundo, então
estamos limitados por um eixo que é a metade

00:08:24.330 --> 00:08:30.449
da velocidade original, a trajetória levou
aproximadamente o dobro de tempo de execução.

00:08:30.449 --> 00:08:34.169
Eu posso traçar x versus tempo.

00:08:34.169 --> 00:08:40.870
Nós podemos ver as 835 etapas e eu posso traçar
x versus y.

